<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbTestTypeImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAA15JREFUWEft
        Vs1LVFEUt89lm2oZRLSsZdtwUcQwvpm599z75tuZ0dHIhQuDoJX+HQWpaIuCiqBWUamZaVoYGSFiGQmN
        OjipkEHF65znffB83Od7ppvAHxzumzf3nN+5551z7qnbw3+D1tbWQ0YiEcmDuJvm8Fkwvhpj/DetKQ6z
        KYDbUYBL9fX1B5XK7qGBsawEsVIG8bMnm7MmSiVrtrnZWmppsVf63ZPNWk1CrpsMlhs4TyrVnYExdjTH
        YbJdmusjxZJVQ8IgGSwWrSu4vyDkWCSSPaJMbR/xePxsmoul+/m8lihI7uRyVkaISpTzU8pkeCQSiZMm
        47V3GFqd8bAyjlFLg1g0DOOYMh0MKeVhCTD/pFCwjVTKZevtNh15g/sXUI+eKYJpgGk0vW+DIQAG522d
        ydSaY4y+fZKDfRrn3VYyivtM3P8Kc8F512Emf8QYk4rCH/bpOdSmm5o2GaVokNHXAZEYQ1La90xFzxGK
        SBbEN0XjjxjnsWvSXHUrOzKARtE530hQpEwA64Xr5G65jCWK0T2nqPTArH94L+ef9eQEkXidIHKBzvmR
        k9zEPlEU4oai0gM72tcpT/i9Mqg+x4giG1Zhp9W71y3DhaJVADGlqPTAU6zNY2fTGXDLkIpEL3ZFWsm4
        bp9bZvBgeMCqotIjzuHPskZZJ91IbjBu9eGq+98ri1iWCcZ/KSo9BIOVuRARoHZLYacIUImGiQDZRZ2a
        otIjBWJmMiAHBogcw/5SfXNaUS/QCSpFvEWpIfkD22Yf9XCdARKnCrwXU5gq6MfqynDoVlR6YLe6eNU0
        v+sM7LQPtAu5in3mvKLSg4YJk/PqR59OSJ3O/d4ro/g/Ofkc97vfv7crgFeQIvg+wGGi3JlKrTjKVN+U
        aBM+J/cKOUn73XfB9WRyDbtgRlFsDRq98LRfnqpT/MttSBNSpbzx/Kix0U6+rq6u/YoiGDiMnKBh5ENp
        64oIEnIcE28hIuVxZTo8ooydIeXHjZu/Z1ixJyLUj8XkaWVy+6BJBq/RqQ5p/hgPSEBHhrAftO3GTOgG
        JlCexm+6UvvVVPwJO1sVCWkqJudu4W1XEmId86dqMBZXqrsHGlawjqMZgAcZEHN0cWFvt8gx/D2T4aI3
        zvkF3HdAqexhDyFQV/cXu9783AN/KUwAAAAASUVORK5CYII=
</value>
  </data>
</root>